Q1: Supposons que les coordonnées du modèle soient exprimées dans un système
    de coordonnées « main gauche » (au lieu du l'habituel « main droite »).
    Comment devrait-on alors modifier la matrice 4x4 servant à la rotation
    afin de préserver le même effet visuel d'une rotation positive ?  Quelle
    serait la nouvelle matrice pour une rotation autour de l'axe des Z ?

    Il faudrait ajouter un signe négatif devant la valeur de l'angle.
    Donc la matrice passe de
    
    [cos(theta) -sin(theta) 0   0
     sin(theta)  cos(theta) 0   0
     0              0       1   0
     0              0       0   1]
    
    à

    [cos(theta)  sin(theta) 0   0
    -sin(theta)  cos(theta) 0   0
     0              0       1   0
     0              0       0   1]

    car sin(-theta) = -sin(theta)


Q2: Dans ce TP, on peut déplacer la bestiole avec les flèches du clavier ou
    encore lancer un déplacement « automatique » avec la touche 'espace'.
    La bestiole se déplace alors dans différentes directions, entre en
    collision avec les parois du cube qui la contient et son mouvement (son
    déplacement) change alors de direction.

    Lorsque la bestiole se déplace ainsi, comment peut-on toujours montrer
    la bestiole se déplaçant en regardant vers l'avant, c'est-à-dire dans le
    sens de son mouvement. Comment faire en sorte que la tête (et le corps)
    soit toujours dirigée dans le sens de son mouvement ?
    Décrivez (avec assez de détails) comment vous implanteriez ceci dans ce TP.

    On doit déterminer la direction de mouvement. 
    Si c'est un déplacement automatique, on la calcule à partir de la fonction 
calculerPhysique. On peut rajouter à la fin, en posant direction le vecteur 
direction de la bestiole
    
    direction.x = sens[0] * vitesse.x
    direction.y = sens[1] * vitesse.y
    direction.z = sens[2] * vitesse.x
   
    On multiplie par la vitesse car la vitesse décomposée est différentes pour chaque axe

    